==13186== Invalid read of size 8
==13186==    at 0x403AE5: mayor(_rep_binario*) (binario.cpp:70)
==13186==    by 0x401624: main (principal.cpp:162)
==13186==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==13186== 
==13186== 
==13186== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==13186==  Access not within mapped region at address 0x0
==13186==    at 0x403AE5: mayor(_rep_binario*) (binario.cpp:70)
==13186==    by 0x401624: main (principal.cpp:162)
==13186==  If you believe this happened as a result of a stack
==13186==  overflow in your program's main thread (unlikely but
==13186==  possible), you can try to increase the size of the
==13186==  main thread stack using the --main-stacksize= flag.
==13186==  The main thread stack size used in this run was 8388608.
1>#  Prueba imprimirBinario, insertarEnBinario.
2>Insertado.
3>Insertado.
4>Insertado.
5>Insertado.
6>Insertado.
7>Insertado.
8>Insertado.
9>Insertado.
10>Insertado.
11>Insertado.
12>Insertado.
13>Insertado.
14>Insertado.
15>Insertado.
16>Insertado.
17>18>NO es camino.
19>NO es camino.
20>NO es camino.
21>NO es camino.
22>NO es camino.
23>NO es camino.
24>NO es camino.
25>NO es camino.
26>NO es camino.
27>NO es camino.
28>NO es camino.
29>Removido el mayor.
30>31>NO es camino.
32>NO es camino.
33>NO es camino.
34>==13186== 544 (336 direct, 208 indirect) bytes in 14 blocks are definitely lost in loss record 5 of 5
==13186==    at 0x4838E86: operator new(unsigned long) (vg_replace_malloc.c:344)
==13186==    by 0x403A9F: insertarEnBinario(_rep_info*, _rep_binario*) (binario.cpp:54)
==13186==    by 0x403A93: insertarEnBinario(_rep_info*, _rep_binario*) (binario.cpp:51)
==13186==    by 0x401589: main (principal.cpp:151)
==13186== 
timeout: the monitored command dumped core
